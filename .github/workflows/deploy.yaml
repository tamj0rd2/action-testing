name: Create Release (to deploy)
on:
  workflow_dispatch:
    inputs:
      commitSha:
        type: string
        description: The commit SHA to deploy. Ensure your provide a commit that has successfully run the CI pipeline.
        required: true
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date '+%Y%m%d%H%M')"
      - name: Get commit ref
        id: commit
        run: |
          echo ::set-output name=longSHA::$(git rev-parse ${{ github.event.inputs.commitSha }})
          echo ::set-output name=shortSHA::$(git rev-parse --short ${{ github.event.inputs.commitSha }})
      - name: Log commit refs
        run: |
          echo ${{ steps.commit.outputs.longSHA }}
          echo ${{ steps.commit.outputs.shortSHA }}
          echo "got input ${{ github.event.inputs.commitSha }}"
          echo "want long $(git rev-parse ${{ github.event.inputs.commitSha }})
          echo "want short $(git rev-parse --short ${{ github.event.inputs.commitSha }})
      - name: Add status check # so the check statuses thing can be tested
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'TestStatus'
          description: 'All good'
          state: 'success'
          sha: ${{ steps.commit.outputs.longSHA }}
      - name: Check pipeline statuses
        uses: tamj0rd2/pipeline-status-action@v1.2.0
        with:
          checkNames: TestStatus
          slackWebhookURL: abc123
          sha: ${{ steps.commit.outputs.shortSHA }}
          timeoutMinutes: "1"
      - name: Do release
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/releases \
            -d '{"tag_name":"${{ steps.commit.outputs.shortSHA }}","target_commitish":"${{ steps.commit.outputs.longSHA }}","name":"${{ steps.commit.outputs.shortSHA }}","body":"automated :)","draft":false,"prerelease":false,"generate_release_notes":false}' \
            --fail
